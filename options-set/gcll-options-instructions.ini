<h3>Limiting the Length of Comments</h3>

<div class="gcll_aside">
<h4>Updates on Greg's WordPress Plugins</h4>
<p>You can keep up on the latest plugin announcements and tutorials by visiting <a href="http://gregsplugins.com/">Greg's Plugins</a>.</p>
</div>

<p>Please also see the README file distributed with this plugin and the plugin's main page: <a href="http://gregsplugins.com/lib/plugin-details/gregs-comment-length-limiter/">Greg's Comment Length Limiter plugin</a>.</p>

<p>For details on how to wrap the following template tags (<em>aka</em> 'functions') in conditionals so your theme will only rely on this plugin when it is activated, please see the <a href="http://gregsplugins.com/lib/faq/">Greg's Plugins FAQ</a>.</p>

<h4>WordPress 3.0+ With New Comment Form Function</h4>

<p>Under WordPress 3.0 and later, the entire comment form can be generated via a single call to the function <code>comment_form()</code>. If your theme uses the new <code>comment_form</code>, this plugin can automatically tweak the form so comments can be counted. The plugin filters the <code>comment_field</code> default and inserts the countdown box just after the <code>label</code> tag for the comment area.</p>

<h4>Styling the Countdown Box and Accompanying Text</h4>

<p>The plugin is designed to allow the inserted countdown box and its accompanying text to inherit relevant styles from the theme's CSS applied to the countdown form. While this is arguably the best way of preserving the look and feel of a countdown form where we're trying in advance to accommodate thousands of differently styled comment forms with potentially vast differences in underlying coding, it does mean that if the theme hasn't fully styled the specific elements used by the countdown box and text, their rendered style may not fully match the theme. If this is the case, their visual look can be improved with the addition of extra styles specific to the elements inserted by the plugin.</p>

<p>For ease of styling, the box and the text description that go with it are wrapped in a <code>span</code> tag with the class <code>countdownbox</code>, while the box showing the character count is a readonly <code>input</code> field with the ID <code>commentlen</code>. So, by adding a style specific to <code>#commentlen</code>, or if necessary to <code>.countdownbox #commentlen</code> (or it can be made even more specific by tacking on a class or ID from the next level up in the comment form), it should be possible to make the box and/or accompanying text match the look and feel of the theme very closely.</p>

<h4>WordPress 3.0+ Customized Limit Box Insertion -- Only if You Really Feel the Need</h4>

<p>If you'd really really really rather position the countdown box yourself, you can do so by tapping into the standard comment form filters and inserting the value returned by <code>gcll_show_limit_box_for_filtering()</code>. The function takes an optional parameter, which is the name of the class for the <code>span</code> which will wrap the box.</p>

<p>When using comment form filters to insert the limit box, also be sure to include the value returned by <code>gcll_tweak_textarea_for_filtering</code> within the textarea tag of your comment form -- thereby replicating the end result of following the pre-3.0 instructions below.</p>

<p>If your theme does not use the new 3.0 functionality, <em>or if you would rather not have to tweak two separate comment form filters</em>, please use the instructions in the following section.</p>

<p>[Brief Editorial Rant. The new <code>comment_form</code> is great for very minor modifications of what the WordPress coders think a comment form ought to look like, but if you want more than a couple of very minor changes, it can be even more tedious to work with than the old spaghetti mix of code and markup... Maybe one day WordPress will adopt the magic of templating, in which one specifies how something should be <em>structured</em>, and separate code fills in elements of that structure -- rather than adding layers upon layers of <em>more code</em> (i.e., filters) to modify structure and thereby deal with weaknesses of the design decision to mix code with markup in the first place.]</p>

<h4>Wordpress 2.9.2 and Earlier, And 3.0+ Themes Without the New Comment Form Functionality</h4>

<p>Preparing your comment form for length limiting is still very straightforward:</p>

<ol class="gcll_numlist">
	<li>Add the following template tag inside the textarea tag of your comment area, preferably wrapped in a conditional that tests whether the function exists: <code>gcll_tweak_textarea()</code></li>
	<li>Optionally, if you would like to position the countdown box yourself, add the following template tag wherever you would like the box to appear within your comment form, again preferably wrapped in a conditional that tests whether the function exists: <code>gcll_show_limit_box_manually()</code></li>
</ol>

<h3>Fine Print</h3>

<p class="gcll_fine_print">This program is free software. You can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.</p>
<p class="gcll_fine_print">This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY -- without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>
